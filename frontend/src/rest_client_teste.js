const axios = require('axios');

// REST API endpoint
const API_URL = 'http://localhost:8000';

async function executarTestes() {
    try {
        console.log('üöÄ Iniciando testes do cliente REST...');

        // --- Testando Opera√ß√µes de Adi√ß√£o (CREATE) ---
        console.log("\n--- Adicionando Dados Iniciais ---");

        // Adicionar usu√°rios
        console.log("\nAdicionando usu√°rios...");
        const alice = await axios.post(`${API_URL}/users/`, {
            nome: "Alice Silva",
            idade: 25
        });
        console.log("Usu√°rio adicionado:", alice.data);

        const bruno = await axios.post(`${API_URL}/users/`, {
            nome: "Bruno Costa",
            idade: 30
        });
        console.log("Usu√°rio adicionado:", bruno.data);

        const carla = await axios.post(`${API_URL}/users/`, {
            nome: "Carla Souza",
            idade: 22
        });
        console.log("Usu√°rio adicionado:", carla.data);

        // Adicionar m√∫sicas
        console.log("\nAdicionando m√∫sicas...");
        const musica1 = await axios.post(`${API_URL}/music/`, {
            nome: "O Ritmo da Vida",
            artista: "Banda Sonhos"
        });
        console.log("M√∫sica adicionada:", musica1.data);

        const musica2 = await axios.post(`${API_URL}/music/`, {
            nome: "Caminho do Sol",
            artista: "Solo Perfeito"
        });
        console.log("M√∫sica adicionada:", musica2.data);

        const musica3 = await axios.post(`${API_URL}/music/`, {
            nome: "Noite Estrelada",
            artista: "Cantor Desconhecido"
        });
        console.log("M√∫sica adicionada:", musica3.data);

        const musica4 = await axios.post(`${API_URL}/music/`, {
            nome: "Melodia Secreta",
            artista: "Melodious Band"
        });
        console.log("M√∫sica adicionada:", musica4.data);

        // Criar playlists
        console.log("\nCriando playlists...");
        const playlist1 = await axios.post(`${API_URL}/playlists/`, {
            nome: "Favoritas da Alice",
            user_id: 1
        });
        console.log("Playlist criada:", playlist1.data);

        const playlist2 = await axios.post(`${API_URL}/playlists/`, {
            nome: "Hits de Rock do Bruno",
            user_id: 2
        });
        console.log("Playlist criada:", playlist2.data);

        const playlist3 = await axios.post(`${API_URL}/playlists/`, {
            nome: "Minhas Mais Novas",
            user_id: 1
        });
        console.log("Playlist criada:", playlist3.data);

        // Adicionar m√∫sicas √†s playlists
        console.log("\nAdicionando m√∫sicas √†s playlists...");
        const addMusic1 = await axios.post(`${API_URL}/playlists/1/music/`, {
            music_id: 1
        });
        console.log("M√∫sica adicionada √† playlist:", addMusic1.data);

        const addMusic2 = await axios.post(`${API_URL}/playlists/1/music/`, {
            music_id: 2
        });
        console.log("M√∫sica adicionada √† playlist:", addMusic2.data);

        const addMusic3 = await axios.post(`${API_URL}/playlists/2/music/`, {
            music_id: 3
        });
        console.log("M√∫sica adicionada √† playlist:", addMusic3.data);

        const addMusic4 = await axios.post(`${API_URL}/playlists/3/music/`, {
            music_id: 1
        });
        console.log("M√∫sica adicionada √† playlist:", addMusic4.data);

        const addMusic5 = await axios.post(`${API_URL}/playlists/3/music/`, {
            music_id: 4
        });
        console.log("M√∫sica adicionada √† playlist:", addMusic5.data);

        // --- Testando Cen√°rios de Erro ---
        console.log("\n--- Testando Cen√°rios de Erro ---");

        // Teste 1: Usu√°rio n√£o existe
        try {
            await axios.post(`${API_URL}/playlists/`, {
                nome: "Playlist Inexistente",
                user_id: 99
            });
        } catch (error) {
            console.log("Teste 1 (usu√°rio n√£o existe):", error.response?.data?.detail || error.message);
        }

        // Teste 2: M√∫sica j√° na playlist
        try {
            await axios.post(`${API_URL}/playlists/1/music/`, {
                music_id: 1
            });
        } catch (error) {
            console.log("Teste 2 (m√∫sica j√° na playlist):", error.response?.data?.detail || error.message);
        }

        // Teste 3: Playlist n√£o existe
        try {
            await axios.post(`${API_URL}/playlists/99/music/`, {
                music_id: 1
            });
        } catch (error) {
            console.log("Teste 3 (playlist n√£o existe):", error.response?.data?.detail || error.message);
        }

        // Teste 4: M√∫sica n√£o existe
        try {
            await axios.post(`${API_URL}/playlists/1/music/`, {
                music_id: 99
            });
        } catch (error) {
            console.log("Teste 4 (m√∫sica n√£o existe):", error.response?.data?.detail || error.message);
        }

        // --- Testando Opera√ß√µes de Consulta (READ) ---
        console.log("\n--- Testando Opera√ß√µes de Consulta (READ) ---");

        // 1. Listar todos os usu√°rios
        console.log("\n-- Listando todos os usu√°rios --");
        const usuarios = await axios.get(`${API_URL}/users/`);
        console.log("Usu√°rios:", usuarios.data);

        // 2. Listar todas as m√∫sicas
        console.log("\n-- Listando todas as m√∫sicas --");
        const musicas = await axios.get(`${API_URL}/music/`);
        console.log("M√∫sicas:", musicas.data);

        // 3. Listar playlists de um usu√°rio
        console.log("\n-- Listando playlists do Usu√°rio ID 1 (Alice) --");
        const playlistsUsuario1 = await axios.get(`${API_URL}/users/1/playlists/`);
        console.log("Playlists do usu√°rio 1:", playlistsUsuario1.data);

        console.log("\n-- Listando playlists do Usu√°rio ID 99 (inexistente) --");
        try {
            const playlistsUsuario99 = await axios.get(`${API_URL}/users/99/playlists/`);
            console.log("Playlists do usu√°rio 99:", playlistsUsuario99.data);
        } catch (error) {
            console.log("Erro ao listar playlists do usu√°rio 99:", error.response?.data?.detail || error.message);
        }

        // 4. Listar m√∫sicas de uma playlist
        console.log("\n-- Listando m√∫sicas da Playlist ID 1 ('Favoritas da Alice') --");
        const musicasNaPl1 = await axios.get(`${API_URL}/playlists/1/music/`);
        console.log("M√∫sicas na playlist 1:", musicasNaPl1.data);

        console.log("\n-- Listando m√∫sicas da Playlist ID 99 (inexistente) --");
        try {
            const musicasNaPl99 = await axios.get(`${API_URL}/playlists/99/music/`);
            console.log("M√∫sicas na playlist 99:", musicasNaPl99.data);
        } catch (error) {
            console.log("Erro ao listar m√∫sicas da playlist 99:", error.response?.data?.detail || error.message);
        }

        // 5. Listar playlists que cont√™m uma m√∫sica
        console.log("\n-- Listando playlists que cont√™m a M√∫sica ID 1 ('O Ritmo da Vida') --");
        const playlistsComMusica1 = await axios.get(`${API_URL}/music/1/playlists/`);
        console.log("Playlists com m√∫sica 1:", playlistsComMusica1.data);

        console.log("\n-- Listando playlists que cont√™m a M√∫sica ID 99 (inexistente) --");
        try {
            const playlistsComMusica99 = await axios.get(`${API_URL}/music/99/playlists/`);
            console.log("Playlists com m√∫sica 99:", playlistsComMusica99.data);
        } catch (error) {
            console.log("Erro ao listar playlists com m√∫sica 99:", error.response?.data?.detail || error.message);
        }

    } catch (erro) {
        console.error("‚ùå Ocorreu um erro:", erro.message);
        console.log("Certifique-se de que o servidor REST esteja rodando e acess√≠vel na porta 8000.");
    }
}

// Executar os testes
executarTestes(); 