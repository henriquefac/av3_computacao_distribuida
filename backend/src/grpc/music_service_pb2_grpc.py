# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import music_service_pb2 as music__service__pb2

GRPC_GENERATED_VERSION = '1.72.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in music_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MusicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/music_service.MusicService/CreateUser',
                request_serializer=music__service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=music__service__pb2.User.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/music_service.MusicService/GetUser',
                request_serializer=music__service__pb2.GetUserRequest.SerializeToString,
                response_deserializer=music__service__pb2.User.FromString,
                _registered_method=True)
        self.ListUsers = channel.unary_unary(
                '/music_service.MusicService/ListUsers',
                request_serializer=music__service__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=music__service__pb2.ListUsersResponse.FromString,
                _registered_method=True)
        self.CreateMusic = channel.unary_unary(
                '/music_service.MusicService/CreateMusic',
                request_serializer=music__service__pb2.CreateMusicRequest.SerializeToString,
                response_deserializer=music__service__pb2.Music.FromString,
                _registered_method=True)
        self.GetMusic = channel.unary_unary(
                '/music_service.MusicService/GetMusic',
                request_serializer=music__service__pb2.GetMusicRequest.SerializeToString,
                response_deserializer=music__service__pb2.Music.FromString,
                _registered_method=True)
        self.ListMusic = channel.unary_unary(
                '/music_service.MusicService/ListMusic',
                request_serializer=music__service__pb2.ListMusicRequest.SerializeToString,
                response_deserializer=music__service__pb2.ListMusicResponse.FromString,
                _registered_method=True)
        self.CreatePlaylist = channel.unary_unary(
                '/music_service.MusicService/CreatePlaylist',
                request_serializer=music__service__pb2.CreatePlaylistRequest.SerializeToString,
                response_deserializer=music__service__pb2.Playlist.FromString,
                _registered_method=True)
        self.GetPlaylist = channel.unary_unary(
                '/music_service.MusicService/GetPlaylist',
                request_serializer=music__service__pb2.GetPlaylistRequest.SerializeToString,
                response_deserializer=music__service__pb2.Playlist.FromString,
                _registered_method=True)
        self.ListUserPlaylists = channel.unary_unary(
                '/music_service.MusicService/ListUserPlaylists',
                request_serializer=music__service__pb2.ListUserPlaylistsRequest.SerializeToString,
                response_deserializer=music__service__pb2.ListPlaylistsResponse.FromString,
                _registered_method=True)
        self.AddMusicToPlaylist = channel.unary_unary(
                '/music_service.MusicService/AddMusicToPlaylist',
                request_serializer=music__service__pb2.AddMusicToPlaylistRequest.SerializeToString,
                response_deserializer=music__service__pb2.Playlist.FromString,
                _registered_method=True)


class MusicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """User operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMusic(self, request, context):
        """Music operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMusic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePlaylist(self, request, context):
        """Playlist operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMusicToPlaylist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MusicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=music__service__pb2.CreateUserRequest.FromString,
                    response_serializer=music__service__pb2.User.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=music__service__pb2.GetUserRequest.FromString,
                    response_serializer=music__service__pb2.User.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=music__service__pb2.ListUsersRequest.FromString,
                    response_serializer=music__service__pb2.ListUsersResponse.SerializeToString,
            ),
            'CreateMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMusic,
                    request_deserializer=music__service__pb2.CreateMusicRequest.FromString,
                    response_serializer=music__service__pb2.Music.SerializeToString,
            ),
            'GetMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMusic,
                    request_deserializer=music__service__pb2.GetMusicRequest.FromString,
                    response_serializer=music__service__pb2.Music.SerializeToString,
            ),
            'ListMusic': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMusic,
                    request_deserializer=music__service__pb2.ListMusicRequest.FromString,
                    response_serializer=music__service__pb2.ListMusicResponse.SerializeToString,
            ),
            'CreatePlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaylist,
                    request_deserializer=music__service__pb2.CreatePlaylistRequest.FromString,
                    response_serializer=music__service__pb2.Playlist.SerializeToString,
            ),
            'GetPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylist,
                    request_deserializer=music__service__pb2.GetPlaylistRequest.FromString,
                    response_serializer=music__service__pb2.Playlist.SerializeToString,
            ),
            'ListUserPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserPlaylists,
                    request_deserializer=music__service__pb2.ListUserPlaylistsRequest.FromString,
                    response_serializer=music__service__pb2.ListPlaylistsResponse.SerializeToString,
            ),
            'AddMusicToPlaylist': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMusicToPlaylist,
                    request_deserializer=music__service__pb2.AddMusicToPlaylistRequest.FromString,
                    response_serializer=music__service__pb2.Playlist.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'music_service.MusicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('music_service.MusicService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MusicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/CreateUser',
            music__service__pb2.CreateUserRequest.SerializeToString,
            music__service__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/GetUser',
            music__service__pb2.GetUserRequest.SerializeToString,
            music__service__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/ListUsers',
            music__service__pb2.ListUsersRequest.SerializeToString,
            music__service__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/CreateMusic',
            music__service__pb2.CreateMusicRequest.SerializeToString,
            music__service__pb2.Music.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/GetMusic',
            music__service__pb2.GetMusicRequest.SerializeToString,
            music__service__pb2.Music.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMusic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/ListMusic',
            music__service__pb2.ListMusicRequest.SerializeToString,
            music__service__pb2.ListMusicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/CreatePlaylist',
            music__service__pb2.CreatePlaylistRequest.SerializeToString,
            music__service__pb2.Playlist.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/GetPlaylist',
            music__service__pb2.GetPlaylistRequest.SerializeToString,
            music__service__pb2.Playlist.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUserPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/ListUserPlaylists',
            music__service__pb2.ListUserPlaylistsRequest.SerializeToString,
            music__service__pb2.ListPlaylistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMusicToPlaylist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/music_service.MusicService/AddMusicToPlaylist',
            music__service__pb2.AddMusicToPlaylistRequest.SerializeToString,
            music__service__pb2.Playlist.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
